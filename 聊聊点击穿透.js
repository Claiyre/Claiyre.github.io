webpackJsonp([2,20],{791:function(n,i){n.exports={content:'<div class="picidae-toc">\n<ul>\n<li>\n<a href="#%E7%A7%BB%E5%8A%A8%E7%AB%AFclick%E4%BA%8B%E4%BB%B6%E8%A2%AB%E5%BB%B6%E8%BF%9F">移动端click事件被延迟</a>\n</li>\n<li>\n<a href="#tap%E4%BA%8B%E4%BB%B6">tap事件</a>\n</li>\n<li>\n<a href="#%E7%82%B9%E5%87%BB%E7%A9%BF%E9%80%8F">点击穿透</a>\n</li>\n<li>\n<a href="#%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E7%82%B9%E5%87%BB%E7%A9%BF%E9%80%8F">如何解决点击穿透</a>\n</li>\n<li>\n<a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0%EF%BC%9A">参考文章：</a>\n</li>\n</ul>\n</div>\n<h3 id="移动端click事件被延迟"><a href="#%E7%A7%BB%E5%8A%A8%E7%AB%AFclick%E4%BA%8B%E4%BB%B6%E8%A2%AB%E5%BB%B6%E8%BF%9F" aria-hidden="true"><span class="icon icon-link"></span></a>移动端click事件被延迟</h3>\n<p>移动端的开发经常需要监听用户的双击行为，所以在touchend事件之后会有300ms左右的延迟，用来判断是否有双击事件。</p>\n<p>因为这种延迟，所以我们在移动端通常不监听click事件。</p>\n<!--more-->\n<p>移动端的事件的发生顺序是这样的：touchstart---touchmove---touchend,然后大约过300ms触发click事件</p>\n<h3 id="tap事件"><a href="#tap%E4%BA%8B%E4%BB%B6" aria-hidden="true"><span class="icon icon-link"></span></a>tap事件</h3>\n<p>zepto这个库解决click延迟的思路是：自定义tap事件，当用户点击元素时，touchend事件会先于click发生，当touchend冒泡到document时触发目标元素的tap事件\n所以我们可以通过监听tap事件代替监听click事件。\n但需要注意的是，tap事件并不是</p>\n<h3 id="点击穿透"><a href="#%E7%82%B9%E5%87%BB%E7%A9%BF%E9%80%8F" aria-hidden="true"><span class="icon icon-link"></span></a>点击穿透</h3>\n<p>在我们常见的弹出层这种情况下，点击关闭弹出层时可能会发生穿透现象。\n那为什么会出现点击穿透这种现象呢</p>\n<p>因为当tap事件发生时，上层遮罩层关闭，此时事件只进行到了touchend,而click大约在300ms后才触发，当click触发时，上面的遮罩层已经消失，这就相当于点击了到了下层的元素</p>\n<p>如果这个元素绑定了click事件，或者有默认的点击行为，比如a标签和input等等，那么就会触发他们的click行为。\n这就是点击穿透事件。</p>\n<h3 id="如何解决点击穿透"><a href="#%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E7%82%B9%E5%87%BB%E7%A9%BF%E9%80%8F" aria-hidden="true"><span class="icon icon-link"></span></a>如何解决点击穿透</h3>\n<p>1.直接将上层的tap事件换成click\n代价就是有300ms的延迟，但毕竟这个按钮用户也就关闭时点一下，所以影响不大</p>\n<p>2.在click事件发生前阻止它\n具体做法是在touchend的事件处理函数中使用e.preventDefault()来阻止后续的click事件。</p>\n<p>3.使用css3的一个新特性：pointer-events\npointer-events:none 可以彻底屏蔽鼠标事件，所以可以给点击按钮这个属性，然后就可以放心大胆地使用tap事件或者touchend啦</p>\n<h3 id="参考文章："><a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0%EF%BC%9A" aria-hidden="true"><span class="icon icon-link"></span></a>参考文章：</h3>\n<ol>\n<li>\n<p><a href="http://www.zhangxinxu.com/wordpress/2011/12/css3-pointer-events-none-javascript/">http://www.zhangxinxu.com/wordpress/2011/12/css3-pointer-events-none-javascript/</a></p>\n</li>\n<li>\n<p><a href="https://segmentfault.com/a/1190000003848737">https://segmentfault.com/a/1190000003848737</a></p>\n</li>\n<li>\n<p><a href="https://github.com/mattt/MsgPackSerialization/wiki/%E7%A7%BB%E5%8A%A8%E7%AB%AFclick%E5%BB%B6%E8%BF%9F%E5%8F%8Azepto%E7%9A%84%E7%A9%BF%E9%80%8F%E7%8E%B0%E8%B1%A1">https://github.com/mattt/MsgPackSerialization/wiki/%E7%A7%BB%E5%8A%A8%E7%AB%AFclick%E5%BB%B6%E8%BF%9F%E5%8F%8Azepto%E7%9A%84%E7%A9%BF%E9%80%8F%E7%8E%B0%E8%B1%A1</a></p>\n</li>\n</ol>\n',extra:{}}}});