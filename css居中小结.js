webpackJsonp([14,20],{779:function(n,e){n.exports={content:'<div class="picidae-toc">\n<ul>\n<li>\n<a href="#%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD">水平居中</a>\n<ul>\n<li>\n<a href="#1-%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E7%9A%84%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD">1. 行内元素的水平居中</a>\n</li>\n<li>\n<a href="#2-%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E7%9A%84%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD">2. 块级元素的水平居中</a>\n</li>\n</ul>\n</li>\n<li>\n<a href="#%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD">垂直居中</a>\n<ul>\n<li>\n<a href="#1-%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E7%9A%84%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD">1. 行内元素的垂直居中</a>\n</li>\n<li>\n<a href="#2-%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E7%9A%84%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD">2. 块级元素的垂直居中</a>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<blockquote>\n<p>博客原文地址：<a href="https://claiyre.github.io/">Claiyre的个人博客 https://claiyre.github.io/</a>\n如需转载，请在文章开头注明原文地址\n不为繁华易匠心</p>\n</blockquote>\n<p>从css入门就开始接触，无所不在的，一直备受争议的居中问题。\ncss居中分为水平居中和垂直居中，水平居中方式也较为常见和统一，垂直居中的方法就千奇百怪了。本文是我积累的若干css居中的方法，先后讨论了块级元素的和行内元素的垂直居中和水平居中，特此记录下来与大家分享。如有叙述不当的地方，还望指出。o(<em>￣▽￣</em>)ブ</p>\n<!--more-->\n<hr>\n<p><strong>本文以下代码中 .outer是父元素的类名，.inner块级代表子元素,span代表行内子元素。</strong></p>\n<h2 id="水平居中"><a href="#%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD" aria-hidden="true"><span class="icon icon-link"></span></a>水平居中</h2>\n<h3 id="1-行内元素的水平居中"><a href="#1-%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E7%9A%84%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD" aria-hidden="true"><span class="icon icon-link"></span></a>1. 行内元素的水平居中</h3>\n<p>直接设置其父元素</p>\n<pre><code data-query="{}" data-lang="">.ourter{\ntext-align: center;\n}\n</code></pre>\n<p><img src="http://p1.bpimg.com/567571/6d8f89e5e10fe43f.png">\n不管有几个行内元素，一行代码即可搞定，so easy~</p>\n<h3 id="2-块级元素的水平居中"><a href="#2-%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E7%9A%84%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD" aria-hidden="true"><span class="icon icon-link"></span></a>2. 块级元素的水平居中</h3>\n<p>也非常简单呐\n设置该块级元素</p>\n<pre><code data-query="{}" data-lang="">div{\nmargin: 0 auto;                                                  \n}\n</code></pre>\n<p><img src="http://p1.bpimg.com/567571/11942f248ca97113.png"></p>\n<p><strong>但是！但是！如果该元素的position为absolute的话，该方法会失效。</strong>\n我是这样理解的：margin为auto即相当于外边距的值是自动的，相对的，所以在绝对定位下将失效。不过还是可以将其margin设为具体数值滴。</p>\n<h2 id="垂直居中"><a href="#%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD" aria-hidden="true"><span class="icon icon-link"></span></a>垂直居中</h2>\n<p>有很多关于垂直居中tricks,博主在这里只介绍一些比较简单常用的\n如果对高度没有要求的哈</p>\n<h3 id="1-行内元素的垂直居中"><a href="#1-%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E7%9A%84%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD" aria-hidden="true"><span class="icon icon-link"></span></a>1. 行内元素的垂直居中</h3>\n<p>1）如果对父元素的高度没有具体的要求的话，将父元素的padding-top padding-bottom设置为相同的值即可。</p>\n<pre><code data-query="{}" data-lang="">.outer{\npadding-top: 60px;\npadidng-bottom: 60px;                                                       \nwidth：300px;\nheight: auto; /*注意：此时父元素的height不能是具体数值*/\n}\n</code></pre>\n<p> 2）如果要求父元素的高度为具体数值时，且确保行内元素不会换行时，可以设置line-height等于父元素的高度</p>\n<pre><code data-query="{}" data-lang="">.outer{\nwidth: 300px;\nheight: 200px;\nline-height: 200px;                                                  \n/*text-align: center; */                                    \n}\n</code></pre>\n<p>此时，即可实现行内元素的垂直居中。若把最后一行加上，即可同时实现水平和垂直居中。\n<strong>但是！！！一定要确保不会换行，也就是只有一行。</strong>\n3）在保持父元素具体数值宽度不变且有不止一行时，可以使用一点小tricks,比如</p>\n<pre><code data-query="{}" data-lang="">.outer{\ntext-align: center;                                                              \nheight: 200px;\nwidth: 300px;\n}\n.outer::before{\ncontent: " ";\nheight: 100%;\nwidth: 1%;\ndisplay: inline-block;\nvertical-align: middle;\n}\n/*html代码如下*/\n&#x3C;div id="outer">\n    &#x3C;span>span1&#x3C;/span>\n    &#x3C;span>span2&#x3C;/span>                                                \n&#x3C;/div>\n</code></pre>\n<p>但是，注意：因为vertical-align是指<strong>行内元素的基线相对于该元素所在行的基线的垂直对齐方式</strong>，所以该方法只对行内元素有效\n效果：\n<img src="http://i1.piimg.com/567571/fc2b131eeefad29a.png"></p>\n<h3 id="2-块级元素的垂直居中"><a href="#2-%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E7%9A%84%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD" aria-hidden="true"><span class="icon icon-link"></span></a>2. 块级元素的垂直居中</h3>\n<p>1）如果已知子元素的高度，可以这样</p>\n<pre><code data-query="{}" data-lang="">.outer{\nposition: relative;                                                       \n}\n.inner{\nheight：50px;\nwidth:50px;\nposition: absolute;\ntop: 50%;\nmargin-top: -25px;  /*该元素高度的一半*/                                  \n}\n</code></pre>\n<p><strong>注意子元素和父元素的position，切记父元素的position是relative</strong></p>\n<p><img src="http://p1.bpimg.com/567571/6d32f20decdd1d04.png">\n2）如果不知道子元素的高度，可以利用css的transform属性，对1）进行小改动，如下：</p>\n<pre><code data-query="{}" data-lang="">.outer{\nposition: relative;                                                         \n}\n.inner{\nwidth:50px;\nposition: absolute;\ntop: 50%;\ntransform: translateY(-50%);                                                    \n}\n</code></pre>\n<p>3）但以上两种方式对于有多个块级子元素的情况就不适用了，比如，这样的情况\n<img src="http://i1.piimg.com/567571/1495e37bb76013be.png">\n这时我们可以用一个div把所有子元素包裹起来，变成一个子元素，然后就可以继续使用上面的方法了。</p>\n<p><strong>最最后！上面的所有方法都是在不使用flex的前提下的才使用的！解决居中问题最爽的当然是flex布局啦，O(∩_∩)O~~ </strong>\n什么？！还不会使用flex布局？赶紧点下面~</p>\n<p><a href="https://claiyre.github.io/2016/11/26/fle%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/">flex布局学习总结</a>\n使用flex，管它是行内元素还是块级元素，管它有几个元素，统统搞定！\n举个栗子！\n实现多个块级元素的垂直加水平居中</p>\n<pre><code data-query="{}" data-lang="">.outer{\ndisplay: flex;\njustify-content: center;                                                              \nalign-items: center;\nflex: 0 0 auto;\n/* flex-direction: column;  */\n}\n</code></pre>\n<p>效果图如下:\n<img src="http://p1.bqimg.com/567571/e6bb0c95009a9515.png"></p>\n<p>如果加上最后一行，则竖直排列子元素，即：</p>\n<p><img src="http://p1.bqimg.com/567571/612652c9872724c0.png"></p>\n<p>是不是很简便腻~O(∩_∩)O哈！</p>\n',extra:{}}}});